import SectionCard from "@/components/SectionCard";
import { Button } from "@/components/ui/button";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { api } from "@/utils/api";
import type { Mitarbeiter } from "@prisma/client";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import AbrechnungsForm from "./AbrechnungsForm";
import EinkaufUpdateForm from "./EinkaufUpdateForm";

// TODO: Bilder gehen nicht! Werden nicht angezeigt.

export default function Home() {
  const Mitarbeiter = api.Mitarbeiter.getAll.useQuery();

  const [ausgewählterMitarbeiter, setAusgewählterMitarbeiter] = useState<
    | ({
        Einkauf: {
          id: string;
          Paypal: boolean;
          Abonniert: boolean;
          Geld: string | null;
          Pfand: string | null;
          Dinge: string | null;
          Abgeschickt: Date | null;
          mitarbeiterId: string;
        } | null;
      } & Mitarbeiter)
    | undefined
  >(undefined);
  const [EinkaufMitarbeiter, setEinkaufMitarbeiter] = useState<
    | ({
        Einkauf: {
          id: string;
          Paypal: boolean;
          Abonniert: boolean;
          Geld: string | null;
          Pfand: string | null;
          Dinge: string | null;
          Abgeschickt: Date | null;
          mitarbeiterId: string;
        } | null;
      } & Mitarbeiter)
    | undefined
  >(undefined);

  useEffect(() => {
    if (ausgewählterMitarbeiter == undefined) {
      setEinkaufMitarbeiter(undefined);
    } else {
      setEinkaufMitarbeiter(ausgewählterMitarbeiter);
    }
  }, [ausgewählterMitarbeiter]);

  const [showAbrechnung, setShowAbrechnung] = useState(false);

  if (Mitarbeiter.isLoading) return <p>Loading...</p>;
  if (Mitarbeiter.error) return <p>Error: {Mitarbeiter.error.message}</p>;

  const Print = () => {
    console.log("Print");
    const area = document.querySelector("[data-druck=true]");
    if (area == null) return;
    console.log("Area found");
    const myWindow = window.open("", "PRINT", "height=1000,width=1200");
    if (myWindow == null) return;
    console.log("Window found");
    myWindow.document.write("<html><body style='white-space: pre-line;'>");
    myWindow.document.write("<h1>Einkaufsliste</h1>");
    myWindow.document.write("<h2>POST MITNEHMEN!</h2>");
    myWindow.document.write(area.innerHTML);
    myWindow.document.write("</body></html>");
    myWindow.document.close();
    myWindow.focus();
    myWindow.print();
    setTimeout(() => {
      myWindow.close();
    }, 2000);
  };

  return (
    <>
      <Head>
        <title>LocalHorst V9</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <SectionCard title="Einkaufen">
          <div className="grid grid-cols-3 gap-4">
            <Select
              value={ausgewählterMitarbeiter?.id}
              onValueChange={(value) =>
                setAusgewählterMitarbeiter(
                  Mitarbeiter.data?.find(
                    (mitarbeiter) => mitarbeiter.id == value,
                  ),
                )
              }
            >
              <SelectTrigger className="w-[180px]">
                <SelectValue placeholder="Mitarbeiter" />
              </SelectTrigger>
              <SelectContent>
                {Mitarbeiter.data?.map((mitarbeiter) => (
                  <SelectItem key={mitarbeiter.id} value={mitarbeiter.id}>
                    {mitarbeiter.Name}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
            <Button
              variant="outline"
              onClick={() => setShowAbrechnung(!showAbrechnung)}
            >
              Abrechnung
            </Button>
            <Button variant="outline" onClick={Print}>
              Drucken
            </Button>
          </div>
          <div className="mt-5">
            {EinkaufMitarbeiter && (
              <EinkaufUpdateForm mitarbeiter={EinkaufMitarbeiter} />
            )}
          </div>
        </SectionCard>
        {showAbrechnung && (
          <SectionCard title="Abrechnung Paypal">
            <AbrechnungsForm Mitarbeiter={Mitarbeiter.data} />
          </SectionCard>
        )}
        <div data-druck="true">
          <SectionCard title="Einkaufsliste">
            {Mitarbeiter.data?.map((mitarbeiter) => {
              if (
                mitarbeiter.Einkauf?.Abgeschickt &&
                new Date(mitarbeiter.Einkauf.Abgeschickt).toDateString() ==
                  new Date().toDateString()
              ) {
                return (
                  <div key={mitarbeiter.id}>
                    <p>Wer: {mitarbeiter.Name}</p>
                    <p>Pfand: {mitarbeiter.Einkauf.Pfand}</p>

                    {mitarbeiter.Einkauf.Paypal ? (
                      <p className="text-red-500">Paypal</p>
                    ) : (
                      <p>Geld: {mitarbeiter.Einkauf.Geld}</p>
                    )}
                    {mitarbeiter.Einkauf.Abonniert && (
                      <p className="text-green-600">Abonnierter Einkauf</p>
                    )}
                    <p>
                      Was: <br />
                    </p>
                    <pre>{mitarbeiter.Einkauf.Dinge}</pre>
                    <div className="grid grid-cols-3">
                      {mitarbeiter.Einkauf.Bild1 &&
                        mitarbeiter.Einkauf.Bild1Date &&
                        new Date(
                          mitarbeiter.Einkauf.Bild1Date,
                        ).toDateString() == new Date().toDateString() &&
                        mitarbeiter.Einkauf.Bild1.length > 0 && (
                          <Image
                            src={mitarbeiter.Einkauf.Bild1}
                            alt="Einkaufen Bild"
                            height={150}
                            width={150}
                            className="object-fit mt-2 rounded-lg border"
                            style={{ maxHeight: 200, width: "auto" }}
                          />
                        )}
                      {mitarbeiter.Einkauf.Bild2 &&
                        mitarbeiter.Einkauf.Bild2Date &&
                        new Date(
                          mitarbeiter.Einkauf.Bild2Date,
                        ).toDateString() == new Date().toDateString() &&
                        mitarbeiter.Einkauf.Bild2.length > 0 && (
                          <Image
                            src={mitarbeiter.Einkauf.Bild2}
                            alt="Einkaufen Bild"
                            height={150}
                            width={150}
                            className="object-fit mt-2 rounded-lg border"
                            style={{ maxHeight: 200, width: "auto" }}
                          />
                        )}
                      {mitarbeiter.Einkauf.Bild3 &&
                        mitarbeiter.Einkauf.Bild3Date &&
                        new Date(
                          mitarbeiter.Einkauf.Bild3Date,
                        ).toDateString() == new Date().toDateString() &&
                        mitarbeiter.Einkauf.Bild3.length > 0 && (
                          <Image
                            src={mitarbeiter.Einkauf.Bild3}
                            alt="Einkaufen Bild"
                            height={150}
                            width={150}
                            className="object-fit mt-2 rounded-lg border"
                            style={{ maxHeight: 200, width: "auto" }}
                          />
                        )}
                    </div>
                    <hr />
                  </div>
                );
              }
            })}
          </SectionCard>
        </div>
      </main>
    </>
  );
}
